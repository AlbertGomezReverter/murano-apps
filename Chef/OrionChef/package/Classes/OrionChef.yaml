Namespaces:
  =: io.murano.conflang.fiware.OrionChef
  std: io.murano
  res: io.murano.resources
  sys: io.murano.system


Name: OrionChef

Extends: std:Application

Properties:

  name:
    Contract: $.string().notNull()
  port:
    Contract: $.string().notNull()
  instance:
    Contract: $.class(res:Instance).notNull()


Methods:
  initialize:
    Body:
      - $._environment: $.find(std:Environment).require()

  deploy:
    Body:
      - If: not $.getAttr(deployed, false)
        Then:
          - $._environment.reporter.report($this, 'Creating VM for Orion Chef ')
          - $securityGroupIngress:
              - ToPort: 22
                FromPort: 22
                IpProtocol: tcp
                External: true
              - ToPort: $.port
                FromPort: $.port
                IpProtocol: tcp
                External: true
          - $._environment.securityGroupManager.addGroupIngress($securityGroupIngress)
          - $.instance.deploy()
          - $resources: new(sys:Resources)
          # Deploy Chef example
          - $template: $resources.yaml('DeployOrionChef.template').bind(dict( port => $.port))

          - $._environment.reporter.report($this, 'Instance is created. Deploying Orion Chef')
          - $.instance.agent.call($template, $resources)
          - $._environment.reporter.report($this, 'Orion is installed')
          - $.setAttr(deployed, true)
